name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: cr.yandex
  IMAGE_NAME: cr.yandex/prokop7/mock-server:master

jobs:
  maven-build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - run: |
          download_url="https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.3.3/graalvm-ce-java17-linux-amd64-21.3.3.tar.gz"
          wget -O $RUNNER_TEMP/java_package.tar.gz $download_url
      - uses: actions/setup-java@v3
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/java_package.tar.gz
          java-version: '17'
          architecture: x64

      #      - uses: graalvm/setup-graalvm@v1
      #        with:
      #          version: 'latest'
      #          java-version: '17'
      #          components: 'native-image'
      #          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Example step
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
      #          gu --version
      #          native-image --version

      - name: Build with Maven
        run: mvn -B install

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: json_key
          password: ${{ secrets.REGISTRY_KEY }}

      - name: Build native image
        run: |
          cd app
          mvn spring-boot:build-image -Dspring-boot.build-image.imageName=${{ env.IMAGE_NAME }}

      - name: Push image to registry
        run: |
          docker push ${{ env.IMAGE_NAME }}

